# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ROIAnalysis.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import*
from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg, NavigationToolbar2QT
from matplotlib.figure import Figure
from PyQt5.QtCore import QRect
import pyqtgraph as pg
class MplCanvas(FigureCanvasQTAgg):
    class Canvas(FigureCanvasQTAgg):

        def __init__(self, parent=None, width=5, height=5, dpi=100):
            fig = Figure(figsize=(width, height), dpi=dpi)
            self.axes = fig.add_subplot(111)
            super(MplCanvas, self).__init__(fig)


class Ui_ROIAnalysis(object):
    def setupUi(self, ROIAnalysis):
        ROIAnalysis.setObjectName("ROIAnalysis")
        ROIAnalysis.resize(819, 587)
        self.centralwidget = QtWidgets.QWidget(ROIAnalysis)
        self.centralwidget.setObjectName("centralwidget")
        self.ROIDer = MplCanvas(self, width = 5, height = 5, dpi =100)
        self.ROIDer.setGeometry(QtCore.QRect(10, 0, 781, 551))
        self.ROIDer.setObjectName("ROIDer")
        self.toolbar = NavigationToolbar2QT(self.ROIDer, self)
        self.toolbar.setGeometry(QRect(700, 30, 400, 40))

        layout = QVBoxLayout()
        layout.addWidget(self.toolbar)
        layout.addWidget(self.ROIDer)
        # Create a placeholder widget to hold our toolbar and canvas.
        widget = QWidget()
        widget.setLayout(layout)
        ROIAnalysis.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(ROIAnalysis)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 819, 22))
        self.menubar.setObjectName("menubar")
        ROIAnalysis.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(ROIAnalysis)
        self.statusbar.setObjectName("statusbar")
        ROIAnalysis.setStatusBar(self.statusbar)

        self.retranslateUi(ROIAnalysis)
        QtCore.QMetaObject.connectSlotsByName(ROIAnalysis)
        return self.ROIDer




    def retranslateUi(self, ROIAnalysis):
        _translate = QtCore.QCoreApplication.translate
        ROIAnalysis.setWindowTitle(_translate("ROIAnalysis", "Pop Up"))

        fig, self.ax = plt.subplots(figsize=(800,580), dpi=100, layout= 'compressed', facecolor= 'none' )
        self.Intensity = FigureCanvasQTAgg(fig)
        self.Intensity.setObjectName(u"Derivative")
        self.Intensity.setAutoFillBackground(True)